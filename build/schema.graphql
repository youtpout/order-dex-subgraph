type Order @entity {
  id: ID!
  status: Int! # uint256
  feeAmount: BigInt! # uint256
  amountToSell: BigInt! # uint256
  amountToBuy: BigInt! # uint256
  amountToSellCompleted: BigInt! # uint256
  amountToBuyCompleted: BigInt! # uint256
  trader: Bytes! # address
  tokenToSell: Bytes! # address
  tokenToBuy: Bytes! # address
  timestamp: BigInt! # uint256
  fromETH: Boolean! # uint256
  toETH: Boolean! # uint256
}

type Counter @entity{
  id: ID!
  all: BigInt! # uint256
  active: BigInt! # uint256
  sold: BigInt! # uint256
  canceled: BigInt! # uint256
  soldAndCanceled: BigInt! # uint256
}

type Pair @entity{
  id: ID!
  tokenSell: Bytes! # address
  tokenBuy: Bytes! # address
  buy: [PairPrice!]! @derivedFrom(field: "pair")
  sold: [PairPrice!]! @derivedFrom(field: "pair")
}


type PairPrice @entity{
  id: ID!
  amount: BigInt! # uint256
  price: BigInt! # uint256
  pair: Pair! 
  reverse:Boolean!
}
