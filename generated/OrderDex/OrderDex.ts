// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OrderAdded extends ethereum.Event {
  get params(): OrderAdded__Params {
    return new OrderAdded__Params(this);
  }
}

export class OrderAdded__Params {
  _event: OrderAdded;

  constructor(event: OrderAdded) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get trader(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get orderInfo(): OrderAddedOrderInfoStruct {
    return changetype<OrderAddedOrderInfoStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class OrderAddedOrderInfoStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get status(): i32 {
    return this[1].toI32();
  }

  get feeAmount(): BigInt {
    return this[2].toBigInt();
  }

  get amountToSell(): BigInt {
    return this[3].toBigInt();
  }

  get amountToBuy(): BigInt {
    return this[4].toBigInt();
  }

  get amountToSellCompleted(): BigInt {
    return this[5].toBigInt();
  }

  get amountToBuyCompleted(): BigInt {
    return this[6].toBigInt();
  }

  get trader(): Address {
    return this[7].toAddress();
  }

  get tokenToSell(): Address {
    return this[8].toAddress();
  }

  get tokenToBuy(): Address {
    return this[9].toAddress();
  }

  get timestamp(): BigInt {
    return this[10].toBigInt();
  }

  get fromETH(): boolean {
    return this[11].toBoolean();
  }

  get toETH(): boolean {
    return this[12].toBoolean();
  }
}

export class OrderCanceled extends ethereum.Event {
  get params(): OrderCanceled__Params {
    return new OrderCanceled__Params(this);
  }
}

export class OrderCanceled__Params {
  _event: OrderCanceled;

  constructor(event: OrderCanceled) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get partiallySold(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Sold extends ethereum.Event {
  get params(): Sold__Params {
    return new Sold__Params(this);
  }
}

export class Sold__Params {
  _event: Sold;

  constructor(event: Sold) {
    this._event = event;
  }

  get orderIdA(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get orderIdB(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get trader(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get filled(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class OrderDex__fetchPageOrdersResultValuesStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get status(): i32 {
    return this[1].toI32();
  }

  get feeAmount(): BigInt {
    return this[2].toBigInt();
  }

  get amountToSell(): BigInt {
    return this[3].toBigInt();
  }

  get amountToBuy(): BigInt {
    return this[4].toBigInt();
  }

  get amountToSellCompleted(): BigInt {
    return this[5].toBigInt();
  }

  get amountToBuyCompleted(): BigInt {
    return this[6].toBigInt();
  }

  get trader(): Address {
    return this[7].toAddress();
  }

  get tokenToSell(): Address {
    return this[8].toAddress();
  }

  get tokenToBuy(): Address {
    return this[9].toAddress();
  }

  get timestamp(): BigInt {
    return this[10].toBigInt();
  }

  get fromETH(): boolean {
    return this[11].toBoolean();
  }

  get toETH(): boolean {
    return this[12].toBoolean();
  }
}

export class OrderDex__fetchPageOrdersResult {
  value0: Array<OrderDex__fetchPageOrdersResultValuesStruct>;
  value1: BigInt;

  constructor(
    value0: Array<OrderDex__fetchPageOrdersResultValuesStruct>,
    value1: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTupleArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValues(): Array<OrderDex__fetchPageOrdersResultValuesStruct> {
    return this.value0;
  }

  getNewCursor(): BigInt {
    return this.value1;
  }
}

export class OrderDex__ordersResult {
  value0: BigInt;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: Address;
  value8: Address;
  value9: Address;
  value10: BigInt;
  value11: boolean;
  value12: boolean;

  constructor(
    value0: BigInt,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: Address,
    value8: Address,
    value9: Address,
    value10: BigInt,
    value11: boolean,
    value12: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    map.set("value8", ethereum.Value.fromAddress(this.value8));
    map.set("value9", ethereum.Value.fromAddress(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set("value11", ethereum.Value.fromBoolean(this.value11));
    map.set("value12", ethereum.Value.fromBoolean(this.value12));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getStatus(): i32 {
    return this.value1;
  }

  getFeeAmount(): BigInt {
    return this.value2;
  }

  getAmountToSell(): BigInt {
    return this.value3;
  }

  getAmountToBuy(): BigInt {
    return this.value4;
  }

  getAmountToSellCompleted(): BigInt {
    return this.value5;
  }

  getAmountToBuyCompleted(): BigInt {
    return this.value6;
  }

  getTrader(): Address {
    return this.value7;
  }

  getTokenToSell(): Address {
    return this.value8;
  }

  getTokenToBuy(): Address {
    return this.value9;
  }

  getTimestamp(): BigInt {
    return this.value10;
  }

  getFromETH(): boolean {
    return this.value11;
  }

  getToETH(): boolean {
    return this.value12;
  }
}

export class OrderDex extends ethereum.SmartContract {
  static bind(address: Address): OrderDex {
    return new OrderDex("OrderDex", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MATCHER_ROLE(): Bytes {
    let result = super.call("MATCHER_ROLE", "MATCHER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MATCHER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MATCHER_ROLE", "MATCHER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MINTER_ROLE(): Bytes {
    let result = super.call("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MINTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MINTER_ROLE", "MINTER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  WETH(): Address {
    let result = super.call("WETH", "WETH():(address)", []);

    return result[0].toAddress();
  }

  try_WETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH", "WETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  creationFee(): BigInt {
    let result = super.call("creationFee", "creationFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_creationFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("creationFee", "creationFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fetchPageOrders(
    cursor: BigInt,
    howMany: BigInt
  ): OrderDex__fetchPageOrdersResult {
    let result = super.call(
      "fetchPageOrders",
      "fetchPageOrders(uint256,uint256):((uint256,uint8,uint256,uint256,uint256,uint256,uint256,address,address,address,uint256,bool,bool)[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(howMany)
      ]
    );

    return new OrderDex__fetchPageOrdersResult(
      result[0].toTupleArray<OrderDex__fetchPageOrdersResultValuesStruct>(),
      result[1].toBigInt()
    );
  }

  try_fetchPageOrders(
    cursor: BigInt,
    howMany: BigInt
  ): ethereum.CallResult<OrderDex__fetchPageOrdersResult> {
    let result = super.tryCall(
      "fetchPageOrders",
      "fetchPageOrders(uint256,uint256):((uint256,uint8,uint256,uint256,uint256,uint256,uint256,address,address,address,uint256,bool,bool)[],uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(cursor),
        ethereum.Value.fromUnsignedBigInt(howMany)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderDex__fetchPageOrdersResult(
        value[0].toTupleArray<OrderDex__fetchPageOrdersResultValuesStruct>(),
        value[1].toBigInt()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nativeToken(): Address {
    let result = super.call("nativeToken", "nativeToken():(address)", []);

    return result[0].toAddress();
  }

  try_nativeToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("nativeToken", "nativeToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  orderCount(): BigInt {
    let result = super.call("orderCount", "orderCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_orderCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("orderCount", "orderCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  orders(param0: BigInt): OrderDex__ordersResult {
    let result = super.call(
      "orders",
      "orders(uint256):(uint256,uint8,uint256,uint256,uint256,uint256,uint256,address,address,address,uint256,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new OrderDex__ordersResult(
      result[0].toBigInt(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toAddress(),
      result[8].toAddress(),
      result[9].toAddress(),
      result[10].toBigInt(),
      result[11].toBoolean(),
      result[12].toBoolean()
    );
  }

  try_orders(param0: BigInt): ethereum.CallResult<OrderDex__ordersResult> {
    let result = super.tryCall(
      "orders",
      "orders(uint256):(uint256,uint8,uint256,uint256,uint256,uint256,uint256,address,address,address,uint256,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderDex__ordersResult(
        value[0].toBigInt(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toAddress(),
        value[8].toAddress(),
        value[9].toAddress(),
        value[10].toBigInt(),
        value[11].toBoolean(),
        value[12].toBoolean()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rewardfee(_fee: BigInt): BigInt {
    let result = super.call("rewardfee", "rewardfee(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_fee)
    ]);

    return result[0].toBigInt();
  }

  try_rewardfee(_fee: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("rewardfee", "rewardfee(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_fee)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _nativeToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class CreateOrderCall extends ethereum.Call {
  get inputs(): CreateOrderCall__Inputs {
    return new CreateOrderCall__Inputs(this);
  }

  get outputs(): CreateOrderCall__Outputs {
    return new CreateOrderCall__Outputs(this);
  }
}

export class CreateOrderCall__Inputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }

  get tokenToSell(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenToBuy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amountToSell(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amountToBuy(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get toETH(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class CreateOrderCall__Outputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }
}

export class CreateOrderFromETHCall extends ethereum.Call {
  get inputs(): CreateOrderFromETHCall__Inputs {
    return new CreateOrderFromETHCall__Inputs(this);
  }

  get outputs(): CreateOrderFromETHCall__Outputs {
    return new CreateOrderFromETHCall__Outputs(this);
  }
}

export class CreateOrderFromETHCall__Inputs {
  _call: CreateOrderFromETHCall;

  constructor(call: CreateOrderFromETHCall) {
    this._call = call;
  }

  get tokenToBuy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountToBuy(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateOrderFromETHCall__Outputs {
  _call: CreateOrderFromETHCall;

  constructor(call: CreateOrderFromETHCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SellOrderCall extends ethereum.Call {
  get inputs(): SellOrderCall__Inputs {
    return new SellOrderCall__Inputs(this);
  }

  get outputs(): SellOrderCall__Outputs {
    return new SellOrderCall__Outputs(this);
  }
}

export class SellOrderCall__Inputs {
  _call: SellOrderCall;

  constructor(call: SellOrderCall) {
    this._call = call;
  }

  get orderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ordersMatches(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SellOrderCall__Outputs {
  _call: SellOrderCall;

  constructor(call: SellOrderCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
